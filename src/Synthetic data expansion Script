# -----------------------------
# ðŸ“˜ Synthetic Data Expansion Script
# -----------------------------
# Upload your file in Colab manually when prompted.
# It will expand your dataset to ~10,000â€“20,000 rows realistically.
# -----------------------------

import pandas as pd
import numpy as np
from sklearn.preprocessing import LabelEncoder
from sklearn.utils import resample

# --- Step 1: Load Dataset ---
from google.colab import files
uploaded = files.upload()  # upload AIORI_portal_data.csv

filename = list(uploaded.keys())[0]
df = pd.read_csv(filename)
print("Original Data Shape:", df.shape)

# --- Step 2: Identify numeric and categorical columns ---
numeric_cols = df.select_dtypes(include=[np.number]).columns.tolist()
categorical_cols = df.select_dtypes(exclude=[np.number]).columns.tolist()

print("Numeric columns:", numeric_cols)
print("Categorical columns:", categorical_cols)

# --- Step 3: Encode categorical columns temporarily ---
encoders = {}
for col in categorical_cols:
    le = LabelEncoder()
    df[col] = le.fit_transform(df[col].astype(str))
    encoders[col] = le

# --- Step 4: Synthetic expansion ---
target_rows = 50000  # you can change between 10000â€“20000
current_rows = len(df)

multiplier = int(np.ceil(target_rows / current_rows))

# Bootstrap resampling
df_expanded = resample(df, replace=True, n_samples=target_rows, random_state=42)

# Add small Gaussian noise to numeric columns
for col in numeric_cols:
    noise = np.random.normal(0, 0.01 * df_expanded[col].std(), size=df_expanded.shape[0])
    df_expanded[col] = df_expanded[col] + noise

# Clip values to original min/max range to avoid outliers
for col in numeric_cols:
    df_expanded[col] = df_expanded[col].clip(df[col].min(), df[col].max())

# --- Step 5: Decode categorical columns back ---
for col in categorical_cols:
    le = encoders[col]
    df_expanded[col] = df_expanded[col].round().astype(int)
    df_expanded[col] = df_expanded[col].clip(0, len(le.classes_) - 1)
    df_expanded[col] = le.inverse_transform(df_expanded[col])

# --- Step 6: Save new file ---
output_name = "AIORI_portal_data_synthesized.csv"
df_expanded.to_csv(output_name, index=False)
print("âœ… Synthetic Data Created Successfully!")
print("New Shape:", df_expanded.shape)

# --- Step 7: Download the new file ---
files.download(output_name)
